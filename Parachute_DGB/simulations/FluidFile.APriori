under Problem {
  Type   = Steady;
  Mode   = Dimensional;
  Prec   = NonPreconditioned;
  Framework = Embedded;
}

under AdaptiveMeshRefinement {
  under SelectionCriterion[0] {
    Type = APriori;
    PreRefine = On;
    MinimumEdgeLength = 1e-1;
    NumLevels = 10;  
      under RefinementDomain {
        Type = Capsule;
      	  under Capsule {
            Point_x = 0;
            Point_y = 0;
            Point_z = -11;
            Normal_x = 0;
            Normal_y = 0;
            Normal_z = 1;
            Radius = 3;
            Length = 61;
          }
      }
    }
  under SelectionCriterion[1] {
    Type = APriori;
    MinimumEdgeLength = 1e-1;
    PreRefine = On;
    NumLevels = 10;
    under RefinementDomain {
      Type = Capsule;
      under Capsule {
        Point_x = 0;
        Point_y = 0;
        Point_z = 20;
        Normal_x = 0;
        Normal_y = 0;
        Normal_z = 1;
        Radius = 8;
        Length = 30;
      }
    }
  }  
   
  under SelectionCriterion[2] {
    Type = WallProximity;
    under WallProximityCriterion {
      OuterZone_d = 1.0;
      OuterZone_H = 1.0;
      InnerZone_D = 0.1;
      InnerZone_H = 0.025;
      DeltaPlus = 1.0;
      EdgeLengthMinMaxRatio = 0.4;
     
    }
    MinimumEdgeLength = 2.5e-2;
    NumLevels = 10;
    PreRefine = On;
  }

  Mode = NonDimensional; 
  RecomputeWallDistance = 2;  
  BisectionStrategy = Isotropic;
  MaximumRefinementIterations = 1000;
  Eps = 1e-3;
  MaximumCoarseningIterations = 1000;
  BalancingFrequency = 50;
  ItrFactor = 1000.0;
  Frequency = 50;
}


under Input {
  GeometryPrefix = "../data/fluidmodel";
  EmbeddedSurface = "../sources/capsule.top";
}

under Output {
  under Postpro {
    Prefix   = "results.APriori/";
    PostprocessSides = 2;
    Pressure = "Pressure.bin";
    Frequency = 1;
  }
  under Restart {
    Prefix   = "references.APriori/";
    Solution = "Solution.bin";
    RestartData = "Restart.data";
    Position = "Position.data";
    EmbeddedPosition = "EmbeddedPosition.data";
    Frequency = 0;
  }
}

under Equations {
  Type = NavierStokes;
  under FluidModel[0] {
    Fluid = PerfectGas;
    under GasModel {
      SpecificHeatRatio = 1.33;
      IdealGasConstant = 188.4;
    }
  }
  under ViscosityModel {
    Type = Sutherland;
    SutherlandConstant = 1.572085931e-6;
    SutherlandReferenceTemperature = 240;
  }
  under TurbulenceClosure {
    Type = LESModel;
    under LESModel{
      Type = Vreman;
      under Vreman {
         Cs = 0.07;
      }
      Delta = Volume;
    }
  }
}


under Surfaces {
  under SurfaceData[1] {
    BoundaryConditionID = 0;
  }
  under SurfaceData[2] {
    BoundaryConditionID = 0;
  }
}

under BoundaryConditions {
  under Inlet {
    Type    = External;
    Mach    = 1.8;
    Density = 0.0067;
    Pressure = 260;
    Alpha   = 90.0;
    Beta    = 0.0;
  }
  under Wall {
    Type        = Adiabatic;
    Integration = Full;
  }  
  under BoundaryData[0] {
    Type = PorousWall;
    Porosity = 0.08;
  }
}

under Space {
  under NavierStokes {
    Flux              = Roe;
    Reconstruction    = Linear;
    AdvectiveOperator = FiniteVolume;
    Limiter           = VanAlbada;
    Gradient          = LeastSquares;
    Beta              = 0.33333333333;
    Gamma             = 1.0;
  }
  under Boundaries {
    Type = StegerWarming;
  }
}

under Time {
  Type = Implicit;
  MaxIts = 0;
  under CflLaw{
      Strategy = Fixed;
      Cfl0 = 20.0;
      CflMax = 20.0;
 }
  under Implicit {
    MatrixVectorProduct = FiniteDifference;
    TurbulenceModelCoupling = Weak;
    under Newton {
      MaxIts = 2;
      Eps = 0.01;
      FailSafe = AlwaysOn;
      under LinearSolver {
        under NavierStokes {
          Type = Gmres;
          MaxIts = 100;
          KrylovVectors = 100;
          Eps = 0.01;
          under Preconditioner {
            Type = Ras;
            Fill = 0;
          }
        }
        under TurbulenceModel {
          Type = Gmres;
          MaxIts = 30;
          KrylovVectors = 30;
          Eps = 0.01;
          under Preconditioner {
            Type = Ras;
            Fill = 0;
          }
        }
      }
    }
  }
}




under EmbeddedFramework {
  TypeHalfRiemannProblem = Surrogate;
  RiemannNormal = Fluid;  
}



